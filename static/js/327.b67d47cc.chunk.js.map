{"version":3,"file":"static/js/327.b67d47cc.chunk.js","mappings":"uPAEaA,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iFAMtBC,EAAeH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gJA0BzBG,GAhBWL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,wDAMTF,EAAAA,GAAAA,GAASO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,yKAOX,SAAAM,GAAW,OAAAA,EAARC,SAA2B,YAAc,aAAa,IAG1DT,EAAAA,GAAAA,IAAUU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,sGChClBS,EAAgBX,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gHCAzBU,EAAcZ,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kQAYvBW,EAAYb,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kGAOtBY,EAAWd,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,mCAKpBa,EAASf,EAAAA,GAAAA,OAAaO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,4PActBc,EAAgBhB,EAAAA,GAAAA,IAAUU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,uF,SCtC1Be,EAAW,SAAHT,GAA4B,IAAtBU,EAAIV,EAAJU,KAAMC,EAASX,EAATW,UAC7B,OACEC,EAAAA,EAAAA,MAACR,EAAW,CAAAS,SAAA,EACVC,EAAAA,EAAAA,KAACT,EAAS,CAACU,IAAKL,EAAKM,MAAOC,IAAKP,EAAKQ,QACtCN,EAAAA,EAAAA,MAACJ,EAAa,CAAAK,SAAA,EACVC,EAAAA,EAAAA,KAACR,EAAQ,CAAAO,SAAEH,EAAKQ,QAChBN,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAIH,EAAKS,MAAM,cAEnBL,EAAAA,EAAAA,KAACP,EAAM,CAACa,QAAS,kBAAMT,EAAUD,EAAK,EAACG,SAAC,kBAG9C,ECTWQ,EAAW,SAAHrB,GAA8B,IAAxBsB,EAAKtB,EAALsB,MAAOX,EAASX,EAATW,UAC9B,OACEG,EAAAA,EAAAA,KAACX,EAAa,CAAAU,SACXS,EAAMC,KAAI,SAACb,GAAI,OACdI,EAAAA,EAAAA,KAACL,EAAQ,CAAeC,KAAMA,EAAMC,UAAWA,GAAhCD,EAAKc,GAAwC,KAIpE,E,UCVWC,EAAOjC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kDAKhBgC,EAAWlC,EAAAA,GAAAA,OAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,sLAOzB,SAAAM,GAAW,OAAAA,EAAR2B,SAA2B,GAAK,SAAS,IAClC,SAAAC,GAAW,OAAAA,EAAR3B,SAA2B,YAAc,aAAa,ICVlE4B,EAAY,SAAH7B,GAAmD,IAA7C8B,EAAK9B,EAAL8B,MAAOC,EAAY/B,EAAZ+B,aAAcC,EAAOhC,EAAPgC,QAASZ,EAAOpB,EAAPoB,QAClDO,EAAWK,EAAQC,OAAS,EACjC,OACCnB,EAAAA,EAAAA,KAACW,EAAI,CAAAZ,SACFiB,EAAMP,KAAI,SAACW,GAAI,OACdpB,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACY,EAAQ,CACPzB,SAAU8B,GAAgBA,EAAaP,KAAOU,EAAKV,GACnDG,SAAUA,EACVP,QAAS,kBAAMA,EAAQc,EAAK,EAACrB,SAE1BqB,EAAKhB,QANHgB,EAAKV,GAQT,KAIb,E,UCpBAW,EAAAA,EAAAA,SAAAA,QAAyB,+CAElB,IAAMC,EAAU,eAAApC,GAAAqC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACCV,EAAAA,EAAAA,IAAU,SAAS,KAAD,EACf,GADpBM,EAAQE,EAAAG,KACdC,QAAQC,IAAIP,EAASQ,MACjBR,EAASQ,KAAK,CAADN,EAAAE,KAAA,eAAAF,EAAAO,OAAA,SACPC,QAAQC,OAAQ,IAAIC,MAAM,0BAA0B,OAC5D,OAAAV,EAAAO,OAAA,SACKT,EAASQ,MAAI,wBAAAN,EAAAW,OAAA,GAAAd,EAAA,KACrB,kBAPoB,OAAAxC,EAAAuD,MAAA,KAAAC,UAAA,KCGVC,EAAQ,SAAHzD,GAA8B,IAAzBW,EAASX,EAATW,UAAWqB,EAAOhC,EAAPgC,QAChC0B,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/B5B,EAAK8B,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAwCJ,EAAAA,EAAAA,UAAS,MAAKK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA/ChC,EAAYiC,EAAA,GAAEC,EAAeD,EAAA,IAEpCE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,eAAAvC,GAAAS,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAS,EAAA,OAAAX,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEMT,IAAa,KAAD,EAAzBa,EAAIN,EAAAG,KACVgB,EAASb,GAAMN,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAyB,GAAAzB,EAAA,SAEfI,QAAQC,IAAGL,EAAAyB,IAAQ,yBAAAzB,EAAAW,OAAA,GAAAd,EAAA,kBAEzB,kBAPgB,OAAAZ,EAAA2B,MAAA,KAAAC,UAAA,KAQdW,GACH,GAAG,KAEFD,EAAAA,EAAAA,YAAU,WACRD,EAAgBlC,GAAgBD,EAAM,GACtC,GAAG,CAACC,EAAcD,IAOpB,OACElB,EAAAA,EAAAA,MAACrB,EAAS,CAAAsB,SAAA,EACND,EAAAA,EAAAA,MAACjB,EAAY,CAAAkB,SAAA,EACbC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAACe,EAAS,CAACC,MAAOA,EAAOC,aAAcA,EAAcC,QAASA,EAASZ,QARrD,SAACc,GACvB+B,EAAgB/B,EAClB,QAQMpB,EAAAA,EAAAA,KAACjB,EAAK,CAAAgB,UACFC,EAAAA,EAAAA,KAACuD,EAAAA,GAAU,CAACC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAAS3D,SAClDkB,IACCnB,EAAAA,EAAAA,MAAA6D,EAAAA,SAAA,CAAA5D,SAAA,EACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAKkB,EAAab,KAAK,QACvBJ,EAAAA,EAAAA,KAACO,EAAQ,CAACC,MAAOS,EAAa2C,SAAU/D,UAAWA,aASrE,EC1CA,EARa,SAAHX,GAA8B,IAAzBW,EAASX,EAATW,UAAWqB,EAAOhC,EAAPgC,QACtB,OACIlB,EAAAA,EAAAA,KAAA2D,EAAAA,SAAA,CAAA5D,UACIC,EAAAA,EAAAA,KAAC2C,EAAK,CAAC9C,UAAWA,EAAWqB,QAASA,KAIlD,C","sources":["components/Shops/Shops.styled.js","components/FoodList/FoodList.stayled.js","components/FoodList/FoodItem/FoodItem.stayled.js","components/FoodList/FoodItem/FoodItem.js","components/FoodList/FoodList.js","components/ShopsList/ShopsList.stayled.js","components/ShopsList/ShopsList.js","service/api.js","components/Shops/Shops.js","page/Home.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  padding: 20px;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const ShopsWrapper = styled.div`\r\n    border: 1px solid rgb(0 0 0);\r\n    border-radius: 10px;\r\n    width: 220px;\r\n    padding: 10px 40px;\r\n    height: 800px;\r\n;\r\n    \r\n`;\r\n\r\nexport const ShopList = styled.ul`\r\n    list-style: none;\r\n    padding: 0;\r\n    \r\n`;\r\n\r\nexport const ShopItem = styled.li`\r\n  text-align: center;\r\n  margin-top: 20px;\r\n  border: 1px solid #000;\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  cursor: pointer;\r\n  background-color: ${({ selected }) => (selected ? 'lightblue' : 'transparent')};\r\n`;\r\n\r\nexport const Foods = styled.div`\r\nborder: 1px solid rgb(0 0 0);\r\nborder-radius: 10px;\r\nwidth: 800px;\r\npadding: 10px 50px;\r\n\r\n`;","import styled from 'styled-components';\r\n\r\nexport const ContainerList = styled.ul`\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n    gap: 30px;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const CardWrapper = styled.li`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 300px;\r\n    height: 300px;\r\n    list-style: none;\r\n    background-color: rgb(242, 242, 242);\r\n    border-radius: 8px;\r\n    padding: 16px;\r\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 2px 4px;\r\n`;\r\n\r\nexport const FoodImage = styled.img`\r\n    width: 300px;\r\n    height: 195px;\r\n    object-fit: cover;\r\n    border-radius: 8px;\r\n`;\r\n\r\nexport const FoodName = styled.h3`\r\n  margin-top: 12px;\r\n  \r\n`;\r\n\r\nexport const Button = styled.button`\r\n  margin-left: auto;\r\n  padding: 15px 40px;\r\n  background-color: #f44336;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n    &:active{\r\n        transform: scale(0.9);\r\n        background-color: #f442211;\r\n    }\r\n`;\r\n\r\nexport const FoodContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;","import { CardWrapper, FoodImage, FoodName, Button, FoodContainer} from \"./FoodItem.stayled\";\r\n\r\nexport const FoodCard = ({ food, addToCart}) => {\r\n    return (\r\n      <CardWrapper>\r\n        <FoodImage src={food.image} alt={food.name} />\r\n        <FoodContainer>\r\n            <FoodName>{food.name}</FoodName>\r\n            <p>{food.price} uah</p>\r\n        </FoodContainer>\r\n        <Button onClick={() => addToCart(food)}>Add to Cart</Button>\r\n      </CardWrapper>\r\n    );\r\n  };\r\n  \r\n","import { ContainerList } from \"./FoodList.stayled\";\r\nimport { FoodCard } from \"./FoodItem/FoodItem\";\r\n\r\n\r\nexport const FoodList = ({ foods, addToCart }) => {\r\n    return (\r\n      <ContainerList>\r\n        {foods.map((food) => (\r\n          <FoodCard key={food.id} food={food} addToCart={addToCart} />\r\n        ))}\r\n      </ContainerList>\r\n    );\r\n  };\r\n","import styled from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n    list-style: none;\r\n    padding: 0;\r\n`;\r\n\r\nexport const ShopItem = styled.button`\r\n  width: 200px;\r\n  text-align: center;\r\n  margin-top: 20px;\r\n  border: 1px solid #000;\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  cursor: ${({ disabled }) => (disabled ? '' : 'pointer')};\r\n  background-color: ${({ selected }) => (selected ? 'lightblue' : 'transparent')};\r\n`;\r\n","import { List, ShopItem } from \"./ShopsList.stayled\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nexport const ShopsList = ({ shops, selectedShop, isFoods, onClick }) => {\r\n  const disabled = isFoods.length > 0;\r\n   return (\r\n    <List>\r\n      {shops.map((shop) => (\r\n        <li key={shop.id}>\r\n          <ShopItem \r\n            selected={selectedShop && selectedShop.id === shop.id}\r\n            disabled={disabled}\r\n            onClick={() => onClick(shop)}\r\n          >\r\n              {shop.name}\r\n          </ShopItem>\r\n        </li>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\n\r\nShopsList.propTypes = {\r\n  shops: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n}","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://643327783e05ff8b37361a24.mockapi.io/\";\r\n\r\nexport const fetchShops = async () => {\r\n    const response = await axios.get(`shops`);\r\n    console.log(response.data)\r\n    if(!response.data) {\r\n       return Promise.reject( new Error( `Error fetching shops` ));\r\n    };\r\n    return response.data;\r\n  };\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container, ShopsWrapper, Foods } from './Shops.styled';\r\nimport { FoodList} from '../FoodList/FoodList';\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport { ShopsList } from '../ShopsList/ShopsList';\r\nimport { fetchShops } from 'service/api';\r\n\r\nexport const Shops = ({addToCart, isFoods}) => {\r\n  const [shops, setShops] = useState([]);\r\n  const [selectedShop, setSelectedShop] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    const getFethc = async () => {\r\n    try {\r\n        const data = await fetchShops();\r\n        setShops(data);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n };\r\n    getFethc();    \r\n }, []);\r\n \r\n  useEffect(() => {\r\n    setSelectedShop(selectedShop || shops[0]);\r\n    }, [selectedShop, shops]);\r\n\r\n\r\n  const handleShopClick = (shop) => {\r\n    setSelectedShop(shop);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n        <ShopsWrapper>\r\n        <h3>Shops:</h3> \r\n        <ShopsList shops={shops} selectedShop={selectedShop} isFoods={isFoods} onClick={handleShopClick} />\r\n        </ShopsWrapper>\r\n        <Foods>\r\n            <Scrollbars style={{ width: \"100%\", height: \"100%\" }}>\r\n              {selectedShop && (\r\n                <>\r\n                  <h3>{selectedShop.name}:</h3>   \r\n                  <FoodList foods={selectedShop.products} addToCart={addToCart} />\r\n                </>\r\n              )}\r\n            </Scrollbars>\r\n        </Foods>\r\n          \r\n    \r\n    </Container>\r\n  );\r\n};\r\n\r\n","import { Shops } from \"../components/Shops/Shops\"\r\n\r\nconst Home = ({addToCart, isFoods}) => {    \r\n    return (\r\n        <>\r\n            <Shops addToCart={addToCart} isFoods={isFoods} />\r\n        </>\r\n        \r\n    )\r\n}\r\nexport default Home;"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","ShopsWrapper","_templateObject2","Foods","_templateObject3","_templateObject4","_ref","selected","_templateObject5","ContainerList","CardWrapper","FoodImage","FoodName","Button","FoodContainer","FoodCard","food","addToCart","_jsxs","children","_jsx","src","image","alt","name","price","onClick","FoodList","foods","map","id","List","ShopItem","disabled","_ref2","ShopsList","shops","selectedShop","isFoods","length","shop","axios","fetchShops","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","sent","console","log","data","abrupt","Promise","reject","Error","stop","apply","arguments","Shops","_useState","useState","_useState2","_slicedToArray","setShops","_useState3","_useState4","setSelectedShop","useEffect","getFethc","t0","Scrollbars","style","width","height","_Fragment","products"],"sourceRoot":""}