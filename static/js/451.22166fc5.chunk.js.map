{"version":3,"file":"static/js/451.22166fc5.chunk.js","mappings":"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","sources":["components/Shopping/Shopping.stayled.js","components/ShoppingList/ShoppingList.styled.js","components/ShoppingList/ShoppingItem/ShoppingItem.stayled.js","components/ShoppingList/ShoppingItem/ShoppingItem.js","components/ShoppingList/ShoppingList.js","components/ShoppingForm/ShoppingForm.styled.js","components/ShoppingForm/ShoppingForm.js","components/Shopping/Shopping.js","page/ShoppingCart.js"],"sourcesContent":["import styled from 'styled-components';\r\nimport { Link as LocalLink } from \"react-router-dom\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  padding: 20px;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const ShopsWrapper = styled.div`\r\n    border: 1px solid rgb(0, 0, 0);\r\n    border-radius: 10px;\r\n    width: 360px;\r\n    padding: 10px 40px;\r\n    height: 500px; \r\n`;\r\n\r\n\r\nexport const Foods = styled.div`\r\n  border: 1px solid rgb(0 0 0);\r\n  border-radius: 10px;\r\n  width: 650px;\r\n  padding: 10px 50px;\r\n\r\n`;\r\nexport const TotalPrice = styled.p`\r\n  text-align: center;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  margin-top: 0;\r\n`\r\nexport const Link = styled(LocalLink)`\r\n  text-decoration: none;\r\n  text-align: center;\r\n  font-size: 32px;\r\n  font-weight: bold;\r\n  \r\n`","import styled from 'styled-components';\r\n\r\nexport const ContainerList = styled.ul`\r\n    display: grid;\r\n    gap: 30px;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const CardWrapper = styled.li`\r\n    display: flex;\r\n    height: 160px;\r\n    list-style: none;\r\n    background-color: rgb(242, 242, 242);\r\n    border-radius: 8px;\r\n    padding: 16px;\r\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 2px 4px;\r\n`;\r\n\r\nexport const FoodImage = styled.img`\r\n    width: 250px;\r\n    height: 160px;\r\n    object-fit: cover;\r\n    border-radius: 8px;\r\n`;\r\n\r\nexport const FoodName = styled.h3`\r\n  margin: 8px;\r\n  \r\n`;\r\n\r\nexport const FoodContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  \r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 100px;\r\n  padding: 8px;\r\n  font-size: 16px;\r\n  text-align: center;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  box-shadow: none;\r\n    &:focus {\r\n      outline: none;\r\n      border-color: blue;\r\n      box-shadow: 0 0 5px rgba(0, 0, 255, 0.5);\r\n    }\r\n`\r\nexport const BtnDelete = styled.button`\r\n  background-color: #ff0000;\r\n  margin-left: auto;\r\n  color: #ffffff;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n    \r\n    &:hover {\r\n      background-color: #cc0000;\r\n    }\r\n}\r\n`","import { CardWrapper, FoodImage, FoodName, FoodContainer, Input, BtnDelete } from \"./ShoppingItem.stayled\";\r\n\r\nexport const ShoppingCard = ({ food, onChange, removeFood }) => {\r\n\r\n    return (\r\n      <CardWrapper>\r\n        <FoodImage src={food.image} alt={food.name} />\r\n        <FoodContainer>\r\n            <FoodName>{food.name}</FoodName>\r\n            <p>Price: {food.price} uah</p>\r\n            <Input \r\n            type=\"number\" \r\n            name=\"quantityOfPortions\" \r\n            value={food.quantity} \r\n            onChange={(e) => onChange(food.id, parseInt(e.target.value, 10))} \r\n            min=\"1\" />\r\n            <BtnDelete onClick={() => removeFood(food.id)}>Delete </BtnDelete>\r\n        </FoodContainer>\r\n\r\n        \r\n        \r\n      </CardWrapper>\r\n    );\r\n  };\r\n  \r\n","import { ContainerList } from \"./ShoppingList.styled\";\r\nimport { ShoppingCard } from \"../ShoppingList/ShoppingItem/ShoppingItem\";\r\n\r\n\r\nexport const ShoppingList = ({ foods, onChange, removeFood }) => {\r\n    return (\r\n      <ContainerList>\r\n        {foods.map((food) => (\r\n          <ShoppingCard key={food.id} food={food} onChange={onChange} removeFood={removeFood} />\r\n        ))}\r\n      </ContainerList>\r\n    );\r\n  };\r\n","import styled from 'styled-components';\r\nimport {Form as FormikForm, Field as FormikField, ErrorMessage as FormikError} from 'formik'\r\n\r\nexport const FormContact = styled.form`\r\n    width: 350px;\r\n    padding: 10px;\r\n    border: 1px solid black;\r\n    \r\n`;\r\nexport const Label = styled.label`\r\n    position: relative;\r\n    display: block;\r\n    margin: 0px 0px 20px 0px;\r\n    \r\n`;\r\nexport const FieldName = styled.p`\r\n    margin: 15px 0px 0px 0px;\r\n    \r\n`;\r\n\r\nexport const Form = styled(FormikForm)`\r\n    width: 100%;\r\n    \r\n`\r\nexport const Field = styled(FormikField)`\r\n    padding: 10px 20px;\r\n    border-radius: 5px;\r\n    \r\n`\r\n\r\nexport const ErrorMessage = styled(FormikError)`\r\n    position: absolute;\r\n    left: 60px;\r\n    display: block;\r\n    color: tomato;\r\n`\r\nexport const Button = styled.button`\r\n  margin-top: 20px;\r\n  margin-left: auto;\r\n  padding: 15px 40px;\r\n  background-color: #f44336;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: ${({ disabled }) => (disabled ? 'not-allowed' : 'pointer')};\r\n  opacity: ${({ disabled }) => (disabled ? '0.5' : '1')};\r\n\r\n    &:active{\r\n        transform: ${({ disabled }) => (disabled ? 'scale(1)' : 'scale(0.9)')};\r\n        background-color: ${({ disabled }) => (disabled ? '#f44336' : '#f44221')};\r\n    }\r\n\r\n    \r\n`\r\n","import React  from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { Label, Form, FieldName, Field, ErrorMessage, Button } from \"./ShoppingForm.styled\";\r\n\r\nimport { Formik, } from \"formik\";\r\nimport * as Yup from 'yup';\r\n\r\nconst ContactSchema = Yup.object().shape({\r\n    name: Yup.string().min(2, 'Too Short!').max(20, 'Too Long!').matches(/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/ , 'Перейди на англійську').required('Required'),\r\n    email: Yup.string().email('Invalid email').required('Required'),\r\n    phone: Yup.string().min(10, 'Too Short!').max(19, 'Too Long!').matches(/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/ , 'Невірний формат').required('Required'),\r\n    address: Yup.string().min(10, 'Too Short!').required('Required'),\r\n  });\r\n\r\nexport const ShoppingFormik = ({onSubmit, isdisabled }) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                name: '',\r\n                email: '',\r\n                phone: '',\r\n                address: '',\r\n            }}\r\n            validationSchema={ContactSchema}\r\n            onSubmit={(values, actions) => {\r\n                onSubmit({\r\n                    ...values,\r\n                    id: nanoid(),\r\n                });\r\n                actions.resetForm();\r\n            }}\r\n            >\r\n            <Form >\r\n                <Label>\r\n                    <FieldName> Name </FieldName> \r\n                    <Field\r\n                    placeholder=\"Jane Doe\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    />\r\n                    <ErrorMessage name=\"name\" component='span'/>\r\n                </Label>\r\n\r\n                <Label>\r\n                    <FieldName> Email </FieldName> \r\n                    <Field\r\n                    placeholder=\"JaneDoe@ukr.net\"\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    />\r\n                    <ErrorMessage name=\"email\" component='span'/>\r\n                </Label>\r\n\r\n                <Label>\r\n                    <FieldName> Phone </FieldName>\r\n                    <Field\r\n                    placeholder=\"000-000-00-00\"\r\n                    type=\"tel\"\r\n                    name=\"phone\"\r\n                    />\r\n                    <ErrorMessage name=\"phone\" component='span'/>\r\n                </Label>\r\n\r\n                <Label>\r\n                    <FieldName> Address </FieldName> \r\n                    <Field\r\n                    placeholder=\"Kyiv, Khreschatyk street, home 8, apartment 1\"\r\n                    type=\"text\"\r\n                    name=\"address\"\r\n                    />\r\n                    <ErrorMessage name=\"address\" component='span'/>\r\n                </Label>\r\n                    \r\n                \r\n                \r\n                <Button type=\"submit\" disabled={isdisabled}>Submit</Button>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n\r\nPropTypes.ContactForm = {\r\n    onSubmit: PropTypes.func.isRequired, \r\n};\r\n","import React, { useState, useEffect, useRef  } from 'react';\r\nimport {  useLocation } from \"react-router-dom\";\r\nimport { Container, ShopsWrapper, Foods, TotalPrice, Link } from './Shopping.stayled';\r\nimport { ShoppingList} from '../ShoppingList/ShoppingList';\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport { ShoppingFormik } from \"../ShoppingForm/ShoppingForm\"\r\n\r\nconst getInitialOrder = () => {\r\n  const orders = localStorage.getItem('orders');\r\n  if(orders !== null) {\r\n    const parsetOrders = JSON.parse(orders);\r\n    return parsetOrders;\r\n  };\r\n  return [];\r\n};\r\n\r\nexport const Shopping = ({selectedFoods, onChange, removeFood}) => {\r\n  const [orders, setOrders] = useState(getInitialOrder);\r\n  \r\n  useEffect(() => {\r\n    localStorage.setItem('orders', JSON.stringify(orders));\r\n    console.log(orders);\r\n  }, [orders]);\r\n \r\n  const handleSubmitClick = (valueForm) => {\r\n    setOrders(prevState => [...prevState , {...valueForm , foods: {...selectedFoods}}])\r\n  }\r\n\r\n  const calculateTotalPrice = (foods) => {\r\n    const totalPrice = foods.reduce((accumulator, food) => {\r\n      const foodPrice = food.price;\r\n      const foodQuantity = food.quantity;\r\n      const foodTotalPrice = foodPrice * foodQuantity;\r\n      return accumulator + foodTotalPrice;\r\n  }, 0);\r\n\r\n    return totalPrice;\r\n  };\r\n\r\n  const isdisabled =  !(selectedFoods.length > 0);\r\n\r\n  const location = useLocation();\r\n  const backLinkHref = useRef(location.state?.from ?? \"/\");\r\n\r\n  return (\r\n    <>\r\n    <Container>\r\n        <ShopsWrapper>\r\n            <ShoppingFormik onSubmit={handleSubmitClick} isdisabled={isdisabled}/>\r\n        </ShopsWrapper>\r\n        <Foods>\r\n            <Scrollbars style={{ width: \"100%\", height: \"100%\" }}>\r\n              {isdisabled ? (\r\n                <Link to={backLinkHref.current} styled={{textDecoration: 'none'}}> &#8592; You haven't ordered anything yet. Return to the shops. </Link>\r\n                ) : (\r\n                  <>\r\n                    <h3>Check the order:</h3>   \r\n                    <ShoppingList foods={selectedFoods} onChange={onChange} removeFood={removeFood} />\r\n                  </>\r\n                )}\r\n              \r\n            </Scrollbars>\r\n        </Foods>\r\n    </Container>\r\n    <TotalPrice>Total prise: {calculateTotalPrice(selectedFoods)} UAH</TotalPrice>\r\n    </>\r\n  );\r\n};\r\n\r\n","import { Shopping } from \"../components/Shopping/Shopping\"\r\n\r\nconst ShoppingCart = ({selectedFoods, onChange, removeFood}) => {\r\n    return (\r\n        <div>\r\n            <Shopping selectedFoods={ selectedFoods } onChange={onChange} removeFood={removeFood}/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShoppingCart;"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","ShopsWrapper","_templateObject2","Foods","_templateObject3","TotalPrice","_templateObject4","Link","LocalLink","_templateObject5","ContainerList","CardWrapper","FoodImage","FoodName","FoodContainer","Input","BtnDelete","_templateObject6","ShoppingCard","_ref","food","onChange","removeFood","_jsxs","children","_jsx","src","image","alt","name","price","type","value","quantity","e","id","parseInt","target","min","onClick","ShoppingList","foods","map","Label","FieldName","Form","FormikForm","Field","FormikField","ErrorMessage","FormikError","Button","_templateObject7","disabled","_ref2","_ref3","_ref4","ContactSchema","Yup","shape","max","matches","required","email","phone","address","ShoppingFormik","onSubmit","isdisabled","Formik","initialValues","validationSchema","values","actions","_objectSpread","nanoid","resetForm","placeholder","component","PropTypes","getInitialOrder","orders","localStorage","getItem","JSON","parse","Shopping","_location$state$from","_location$state","selectedFoods","_useState","useState","_useState2","_slicedToArray","setOrders","useEffect","setItem","stringify","console","log","length","location","useLocation","backLinkHref","useRef","state","from","_Fragment","valueForm","prevState","concat","_toConsumableArray","Scrollbars","style","width","height","to","current","textDecoration","reduce","accumulator"],"sourceRoot":""}